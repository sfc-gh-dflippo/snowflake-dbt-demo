name: Deploy dbt Project

on:
  push:
    branches:
      - main
      - test
    paths-ignore:
      - 'schemachange/**'
  pull_request:
    branches:
      - main
      - test
    paths-ignore:
      - 'schemachange/**'

env:
  PIP_CACHE_DIR: ~/.cache/pip

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || (github.ref_name == 'test' && 'test' || 'development') }}
    # The above expression means:
    # - If branch is 'main', use 'production' environment.
    # - Else if branch is 'test', use 'test' environment.
    # - Otherwise (e.g., feature branches), use 'development' environment.

    steps:
      - name: Checkout Project
        uses: actions/checkout@v5

      - name: Set Python Version
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install pip requirements
        run: pip install -U -r requirements.txt

      # Set up Snowflake RSA private key
      - name: Set up Snowflake private key
        run: |
          echo "${{ secrets.SNOWFLAKE_PRIVATE_KEY }}" > rsa_key.p8
          chmod 600 rsa_key.p8
        env:
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}

      # Deploy dbt project
      - name: Deploy dbt project
        run: |
          set -e
          snow connection add -n default --no-interactive --authenticator SNOWFLAKE_JWT
          snow connection test
          dbt clean
          dbt deps
          dbt parse
          schemachange
          snow dbt deploy ${{ vars.DBT_PROJECT_NAME }}
        env:
          # dbt variables
          DBT_TARGET: ${{ github.ref_name }}
          DBT_PROJECT_DIR: ${{ github.workspace }}
          DBT_PROFILES_DIR: ${{ github.workspace }}/deploy_config
          SNOWFLAKE_THREADS: ${{ vars.SNOWFLAKE_THREADS }}

          # Snowflake variables - Production (main branch)
          SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ vars.SNOWFLAKE_USER }}
          SNOWFLAKE_ROLE: ${{ vars.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ vars.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ vars.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_PRIVATE_KEY_PATH: ./rsa_key.p8
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}

      # Upload dbt artifacts for debugging
      - name: Upload dbt artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbt-artifacts-${{ github.run_number }}
          path: |
            target/
            logs/
          retention-days: 7

      # Clean up private key
      - name: Clean up private key
        if: always()
        run: |
          rm -f rsa_key.p8



