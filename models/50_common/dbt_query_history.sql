{# If run regularly, this can allow you to build up a longer history of your own queries #}
{# We have set `full_refresh = false` to prevent losing history when full-loading other tables #}
{{- config(
    materialized='incremental',
    full_refresh = false,
    on_schema_change='sync_all_columns'
) -}}

with WAREHOUSE_SIZE AS
(
    SELECT *, FROM (
        VALUES
        ('X-SMALL', 1, 8),
        ('SMALL', 2, 16),
        ('MEDIUM', 4, 32),
        ('LARGE', 8, 64),
        ('X-LARGE', 16, 128),
        ('2X-LARGE', 32, 256),
        ('3X-LARGE', 64, 512),
        ('4X-LARGE', 128, 1024),
        ('5X-LARGE', 256, 2048),
        ('6X-LARGE', 512, 4096)
    ) AS v1 (WAREHOUSE_SIZE, WAREHOUSE_NODES, WAREHOUSE_VCPU)
), QUERY_HISTORY as (
    SELECT
    * REPLACE (TRY_PARSE_JSON(QUERY_TAG) AS QUERY_TAG)
    FROM TABLE({{ this.database }}.INFORMATION_SCHEMA.QUERY_HISTORY_BY_USER(
        END_TIME_RANGE_START => DATEADD(DAY, -1, DATE_TRUNC(DAY, CURRENT_TIMESTAMP())),
        RESULT_LIMIT => 10000
    )) QH
    {% if is_incremental() -%}

    WHERE QH.START_TIME > (SELECT MAX(T.START_TIME) FROM {{ this }} T)

    {%- endif %}
)
SELECT
    'https://app.snowflake.com/' ||
        CURRENT_ORGANIZATION_NAME() || '/' || CURRENT_ACCOUNT_NAME() ||
        '/#/compute/history/queries/' || QUERY_ID AS QUERY_PROFILE_URL,
    TOTAL_ELAPSED_TIME/1000 AS TOTAL_ELAPSED_SEC,
    UPPER(QUERY_TAG:TARGET_NAME::VARCHAR) AS TARGET_NAME,
    TRY_TO_BOOLEAN(QUERY_TAG:MODULE_DETAILS:IS_INCREMENTAL::VARCHAR) AS IS_INCREMENTAL,
    QUERY_TAG:APP::VARCHAR AS APP,
    QUERY_TAG:APP_VERSION::VARCHAR AS APP_VERSION,
    QUERY_TAG:MODULE_NAME::VARCHAR AS MODULE_NAME,
    QUERY_TAG:MODULE_TYPE::VARCHAR AS MODULE_TYPE,
    (COMPILATION_TIME/1000) AS COMPILATION_SEC,
    (EXECUTION_TIME/1000) AS EXECUTION_SEC,
    NVL( (QH.EXECUTION_TIME/(1000*60*60))*WS.WAREHOUSE_NODES, 0) AS RELATIVE_PERFORMANCE_COST,
    QUERY_TAG:PROJECT_NAME::VARCHAR AS PROJECT_NAME,
    QUERY_TAG:RUN_ID::VARCHAR AS RUN_ID,
    QUERY_TAG:RUN_DETAILS AS RUN_DETAILS,
    QUERY_TAG:MODULE_ID::VARCHAR AS MODULE_ID,
    QUERY_TAG:MODULE_DETAILS AS MODULE_DETAILS,
    QUERY_TAG:MODULE_TAGS AS MODULE_TAGS,
    QUERY_TAG:RUN_STARTED_AT::VARCHAR AS RUN_STARTED_AT,
    QUERY_TAG:ENVIRONMENT_NAME::VARCHAR AS ENVIRONMENT_NAME,
    QUERY_TAG:ENVIRONMENT_DETAILS AS ENVIRONMENT_DETAILS,
    WS.*,
    QH.* EXCLUDE (WAREHOUSE_SIZE)
FROM QUERY_HISTORY QH
LEFT OUTER JOIN WAREHOUSE_SIZE WS ON WS.WAREHOUSE_SIZE = UPPER(QH.WAREHOUSE_SIZE)
WHERE APP = 'dbt'
-- Sample Filters:
-- AND QUERY_TYPE NOT IN ('ALTER_SESSION', 'DESCRIBE')
-- AND MODULE_TYPE IN ('model')
-- AND TOTAL_ELAPSED_TIME > 500 -- Only show queries over .5 second
